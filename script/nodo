#
# Nodo — Keep clean from node_modules.
# By Nicolò Diamante <hello@nicolodiamante.com>
# https://github.com/nicolodiamante/nodo
# MIT License
#

nodo() {
  # Checks for any parameter, or shows help.
  if [[ "$#" -eq 0 && -z "$GIT_CONFIG_URL" ]]; then
    echo "nodo: for more information see 'nodo --help'"
    return 0
  fi

  # Shows `help` message.
  if [[ "$1" == "-h" || "$1" == "--help" ]]; then
    echo "Usage: nodo [OPTION]"
    echo "Options:"
    echo "  -n, --nosync    Stop the sync of the node_modules directory into iCloud."
    echo "  -r, --remove    Remove the node_modules directory from the current working directory."
    echo "  -h, --help      Display this help message and exit."
    echo ""
    echo "Note: When 'nodo' is executed inside a git repository, it will search for the"
    echo ".gitignore file. If it doesn't find it, it will create one. Otherwise, it will"
    echo "append 'node_modules/' to the existing .gitignore file."
    echo ""
    echo "For full documentation, visit: https://github.com/nicolodiamante/nodo"
    return 0
  fi

  # Stop syncing node_modules from the current working directory.
  if [[ "$1" == "-n" || "$1" == "--nosync" ]]; then
    if [[ -d "node_modules" ]]; then
      if [[ ! -d "node_modules.tmp" ]]; then
        if mv node_modules node_modules.tmp && ln -s node_modules.tmp node_modules && chflags hidden node_modules.tmp; then
          echo 'nodo: stopped syncing node_modules'
        else
          echo 'nodo: failed to stop syncing node_modules'
          return 1
        fi
      else
        echo 'nodo: already stopped syncing node_modules'
      fi

      # Check if current directory is a Git repository.
      if git rev-parse --is-inside-work-tree > /dev/null 2>&1; then
        if ! grep -qxF 'node_modules/' .gitignore; then
          echo "node_modules/" >> .gitignore
        fi
      elif [[ ! -f ".gitignore" ]]; then
        echo "node_modules/" > .gitignore
      fi
    else
      echo 'nodo: node_modules directory does not exist'
    fi

  # Remove node_modules from the current working directory.
  elif [[ "$1" == "-r" || "$1" == "--remove" ]]; then
    if [[ -d "node_modules" ]]; then
      if rm -rf node_modules; then
        echo 'nodo: removed node_modules!'
      else
        echo 'nodo: failed to remove node_modules'
        return 1
      fi
    else
      echo 'nodo: node_modules not found in the current directory'
    fi
  fi
}
